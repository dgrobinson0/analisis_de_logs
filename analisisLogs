#!/bin/bash

# Autor: DGR - UCI - Fac2

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

function printTable(){

    local -r delimiter="${1}"
    local -r data="$(removeEmptyLines "${2}")"

    if [[ "${delimiter}" != '' && "$(isEmptyString "${data}")" = 'false' ]]
    then
        local -r numberOfLines="$(wc -l <<< "${data}")"

        if [[ "${numberOfLines}" -gt '0' ]]
        then
            local table=''
            local i=1

            for ((i = 1; i <= "${numberOfLines}"; i = i + 1))
            do
                local line=''
                line="$(sed "${i}q;d" <<< "${data}")"

                local numberOfColumns='0'
                numberOfColumns="$(awk -F "${delimiter}" '{print NF}' <<< "${line}")"

                if [[ "${i}" -eq '1' ]]
                then
                    table="${table}$(printf '%s#+' "$(repeatString '#+' "${numberOfColumns}")")"
                fi

                table="${table}\n"

                local j=1

                for ((j = 1; j <= "${numberOfColumns}"; j = j + 1))
                do
                    table="${table}$(printf '#| %s' "$(cut -d "${delimiter}" -f "${j}" <<< "${line}")")"
                done

                table="${table}#|\n"

                if [[ "${i}" -eq '1' ]] || [[ "${numberOfLines}" -gt '1' && "${i}" -eq "${numberOfLines}" ]]
                then
                    table="${table}$(printf '%s#+' "$(repeatString '#+' "${numberOfColumns}")")"
                fi
            done

            if [[ "$(isEmptyString "${table}")" = 'false' ]]
            then
                echo -e "${table}" | column -s '#' -t | awk '/^\+/{gsub(" ", "-", $0)}1'
            fi
        fi
    fi
}

function removeEmptyLines(){

    local -r content="${1}"
    echo -e "${content}" | sed '/^\s*$/d'
}

function repeatString(){

    local -r string="${1}"
    local -r numberToRepeat="${2}"

    if [[ "${string}" != '' && "${numberToRepeat}" =~ ^[1-9][0-9]*$ ]]
    then
        local -r result="$(printf "%${numberToRepeat}s")"
        echo -e "${result// /${string}}"
    fi
}

function isEmptyString(){

    local -r string="${1}"

    if [[ "$(trimString "${string}")" = '' ]]
    then
        echo 'true' && return 0
    fi

    echo 'false' && return 1
}

function trimString(){

    local -r string="${1}"
    sed 's,^[[:blank:]]*,,' <<< "${string}" | sed 's,[[:blank:]]*$,,'
}

function helpPanel(){
	echo -e "\n\t${redColour}[!] Uso: ./analisisLogs${endColour}"
	for i in $(seq 1 80); do echo -ne "${redColour}-"; done; echo -ne "${endColour}"
	echo -e "\n\n\t${grayColour}[-l]${endColour}${yellowColour} Estandarizar formato, para access log **excriba.prod.uci.cu**${endColour}${blueColour} (Ejemplo: -l path/archivo.log)${endColour}"
	echo -e "\n\t${grayColour}[-r]${endColour}${yellowColour} Leer un archivo ${endColour}${blueColour} (Ejemplo: -r path/archivo.log)${endColour}"
	echo -e "\n\t${grayColour}[-e]${endColour}${yellowColour} Modo exploración${endColour}"
	echo -e "\t\t${purpleColour}logs${endColour}${yellowColour}:\t\t\t Listar los Logs${endColour}"
	echo -e "\t\t${purpleColour}logs_get${endColour}${yellowColour}:\t\t Listar los logs cuyas peticiones sean: GET${endColour}"
	echo -e "\t\t${purpleColour}logs_post${endColour}${yellowColour}:\t\t Listar los logs cuyas peticiones sean: POST${endColour}"
	echo -e "\n\t${grayColour}[-n]${endColour}${yellowColour} Limitar el número de resultados${endColour}${blueColour} (Ejemplo: -n 10)${endColour}"
	echo -e "\n\t${grayColour}[-i]${endColour}${yellowColour} Proporcionar una direccion ip${endColour}${blueColour} (Ejemplo: -i 192.168.1.23)${endColour}"
	echo -e "\n\t${grayColour}[-f]${endColour}${yellowColour} Proporcionar una fecha${endColour}${blueColour} (Ejemplo: -f 10/Dec/2020)${endColour}"
	echo -e "\n\t${grayColour}[-d]${endColour}${yellowColour} Mostrar un reporte general${endColour}${blueColour} (Ejemplo: -d report)${endColour}"
	echo -e "\n\t${grayColour}[-h]${endColour}${yellowColour} Mostrar este panel de ayuda${endColour}${blueColour}(-- help o -- h) ${endColour}\n"
	tput cnorm; exit 1
}

function logs(){
	if [[ -n $inspeccionar_ip && -n $inspeccionar_fecha ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | awk 'ORS="\n\n"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Fecha|Cant_Peticiones|GET|POST|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$inspeccionar_fecha|$cant_pet|$cant_get|$cant_post|$horario_letra${endColour}" >> logs.txt
			logs_urls_mas_visitada
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	elif [[ -n $inspeccionar_ip && ! -n $inspeccionar_fecha ]]; then
		if [[ $reporte == "report" ]]; then
			cat $nombre_archivo | awk -v ip="$inspeccionar_ip" '$1 == ip' > logs_report.txt
			logs_report_general
			echo -e "${blueColour}IP|Cant_Peticiones|GET|POST|Fecha_Mas_Activa|Horario_Mas_Activo${endColour}" > logs.txt
			echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$cant_get|$cant_post|$fecha_trafico|$horario_letra${endColour}" >> logs.txt
			logs_urls_mas_visitada
			logs_report
		else
			echo -e "${yellowColour}$(cat $nombre_archivo | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	elif [[ -n $inspeccionar_fecha && ! -n $inspeccionar_ip ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' > logs_report.txt
			logs_report_general
			echo -e "${blueColour}Fecha|Cant_Peticiones|GET|POST|IP_Mas_Activa|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_fecha|$cant_pet|$cant_get|$cant_post|$ip_activa|$horario_letra${endColour}" >> logs.txt
                        logs_urls_mas_visitada
			logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	else
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo  > logs_report.txt
			logs_report_general
                        echo -e "${blueColour}Cant_Peticiones|GET|POST|IP_Mas_Activa|Fecha_Mas_Activa|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$cant_pet|$cant_get|$cant_post|$ip_activa|$fecha_trafico|$horario_letra${endColour}" >> logs.txt
                        logs_urls_mas_visitada
			logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	fi
}
function logs_peticiones(){
	if [[ -n $inspeccionar_ip && -n $inspeccionar_fecha ]]; then
                if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' |  awk 'ORS="\n\n"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Fecha|Cant_Peticiones|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$inspeccionar_fecha|$cant_pet|$horario_letra${endColour}" >> logs.txt
                        logs_urls_mas_visitada
			logs_report
                else
			if [ -n "$codigo_respuesta" ]; then
                                codigo_respuesta_ingresado
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | awk -v valor="$valor" '$9 ~ "^" valor' | head -n $limitar | awk 'ORS="\n\n"')${endColor}"
			else
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColor}"
        		fi
		fi
	elif [[ -n $inspeccionar_ip && ! -n $inspeccionar_fecha ]]; then
                if [[ $reporte == "report" ]]; then
			cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v ip="$inspeccionar_ip" '$1 == ip' > logs_report.txt
			logs_report_general
			echo -e "${blueColour}IP|Cant_Peticiones|Fecha_Mas_Activa|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico|$horario_letra${endColour}" >> logs.txt
			logs_urls_mas_visitada
			logs_report
		else
			if [ -n "$codigo_respuesta" ]; then
                                codigo_respuesta_ingresado
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v ip="$inspeccionar_ip" '$1 == ip' | awk -v valor="$valor" '$9 ~ "^" valor' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
			else
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
        		fi
		fi
	elif [[ -n $inspeccionar_fecha && ! -n $inspeccionar_ip ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}Fecha|Cant_Peticiones|IP_Mas_Activa|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_fecha|$cant_pet|$ip_activa|$horario_letra${endColour}" >> logs.txt
                        logs_urls_mas_visitada
                        logs_report
                else
			if [ -n "$codigo_respuesta" ]; then
                                codigo_respuesta_ingresado
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' | awk -v valor="$valor" '$9 ~ "^" valor' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
                	else
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
        		fi
		fi
	else
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}Cant_Peticiones|Fecha_Mas_Activa|IP_Mas_Activa|Horario_Mas_Activo${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico|$ip_activa|$horario_letra${endColour}" >> logs.txt
                        logs_urls_mas_visitada
                        logs_report
		else
			if [ -n "$codigo_respuesta" ]; then
				codigo_respuesta_ingresado
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | awk -v valor="$valor" '$9 ~ "^" valor' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
			else
				echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
			fi
		fi
	fi
}

function logs_report_general(){
	#declaracion de variables
        cant_pet=$(cat logs_report.txt | wc -l)
#	cant_pet_peticion=$(cat logs_report.txt | tr -d '"' | awk -v peticion="$peticion" '$6 == peticion' | wc -l)
        cant_get=$(cat logs_report.txt | tr -d '"' | awk '$6 == "GET"' |  wc -l)
        cant_post=$(cat logs_report.txt | tr -d '"' | awk '$6 == "POST"' |  wc -l)
	fecha_trafico=$(cat logs_report.txt | awk '{print $4}' | tr -d '[' | awk -F ':' '{print $1}' | uniq -c | sort -nr | head -n 1 | awk '{print $2}')
        ip_activa=$(cat logs_report.txt | awk '{print $1}' | uniq -c | sort -nr | head -n 1 | awk '{print $2}')
	url_activa=$(cat logs_report.txt | awk '{print $7}' | uniq -c | sort -nr | head -n 5)
	cant_pet_madrugada=$(cat logs_report.txt | awk -F ':' '$2 >= "00" && $2 <= "06"' | wc -l)
	cant_pet_dia=$(cat logs_report.txt | awk -F ':' '$2 >= "07" && $2 <= "19"' | wc -l)
	cant_pet_noche=$(cat logs_report.txt | awk -F ':' '$2 >= "20" && $2 <= "23"' | wc -l)
	#codigo_respuesta_200=$(cat logs_report.txt | awk '{print $9}' | awk '/^2/ {print}')

	#llamada a funciones
	horario_mas_visitado
#	porciento_horario_mas_visitado
	echo -e "$horario"
}

function logs_urls_mas_visitada(){
	echo -e "${blueColour}URL Mas Visitada${endColour}" >> logs1.txt
        echo -e "${yellowColour}$url_activa${endColour}" >> logs1.txt

}
function horario_mas_visitado(){
	if [ "$cant_pet_madrugada" -gt "$cant_pet_dia" ] && [ "$cant_pet_madrugada" -gt "$cant_pet_noche" ]; then
		horario="$cant_pet_madrugada"
		horario_letra="Madrugada [12a.m--7a.m]"
    	elif [ "$cant_pet_dia" -gt "$cant_pet_madrugada" ] && [ "$cant_pet_dia" -gt "$cant_pet_noche" ]; then
        	horario="$cant_pet_dia"
		horario_letra="Día [7a.m--8p.m]"
    	elif [ "$cant_pet_noche" -gt "$cant_pet_dia" ] && [ "$cant_pet_noche" -gt "$cant_pet_madrugada" ]; then
		horario="$cant_pet_noche"
		horario_letra="Noche [8p.m--12a.m]"
    	fi
}
function codigo_respuesta_ingresado(){
	if [ "$codigo_respuesta" == "200" ]; then
		valor=2
	elif [ "$codigo_respuesta" == "300" ]; then
		valor=3
	elif [ "$codigo_respuesta" == "400" ]; then
                valor=4
	elif [ "$codigo_respuesta" == "500" ]; then
                valor=5
	fi
}
#function porciento_horario_mas_visitado(){
#    	if [ -n "$peticion" ]; then
#        	porciento=$(($horario * 100 / $cant_pet_peticion))
#    	else
#		echo -e "$peticion"
#        	porciento=$(($horario * 100 / $cant_pet))
#    	fi
#}
function logs_report(){
	printTable '|' "$(cat logs.txt)"
	printTable '|' "$(cat logs1.txt)"
        rm logs_report.txt logs.txt logs1.txt
}

parameter_counter=0
limitar=30
while getopts "d:r:e:n:i:f:h:l:c:" arg; do
	case $arg in
		r) nombre_archivo=$OPTARG;;
		l) estandar_archivo=$OPTARG; let parameter_counter+=1;;
		e) modo_exploracion=$OPTARG; let parameter_counter+=1;;
		n) limitar=$OPTARG; let parameter_counter+=1;;
		i) inspeccionar_ip=$OPTARG; let parameter_counter+=1;;
		f) inspeccionar_fecha=$OPTARG; let parameter_counter+=1;;
		c) codigo_respuesta=$OPTARG; let parameter_counter+=1;;
		d) reporte=$OPTARG; let parameter_counter+=1;;
		h) helpPanel;;
	esac
done

if [ $parameter_counter == 0 ]; then
	helpPanel
else
	case $modo_exploracion in
		logs) logs;;
		logs_get) peticion="GET"; logs_peticiones;;
		logs_post) peticion="POST"; logs_peticiones;;
	esac

#        if [ -n $estandar_archivo ]; then
#                if [ "$(cat $estandar_archivo | awk '{print $1}' | head -n 1)" == "$(cat $estandar_archivo | awk '{print $2}' | head -n 1)" ]; then
#                        cat $estandar_archivo | awk '{$2=""; print $0}' > tmp.log
#                        cat tmp.log > $estandar_archivo
#                        rm tmp.log
#                        echo -e "\n\t${yellowColour}[*] Archivo estandarizado satisfactoriamente.${endColour}"
#                else
#                        echo -e "\n\t${yellowColour}[*] El archivo ya se encuentra estandarizado${endColour}"
#                fi
#	fi
fi
