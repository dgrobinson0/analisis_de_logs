#!/bin/bash

# Autor: DGR - UCI - Fac2

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

function printTable(){

    local -r delimiter="${1}"
    local -r data="$(removeEmptyLines "${2}")"

    if [[ "${delimiter}" != '' && "$(isEmptyString "${data}")" = 'false' ]]
    then
        local -r numberOfLines="$(wc -l <<< "${data}")"

        if [[ "${numberOfLines}" -gt '0' ]]
        then
            local table=''
            local i=1

            for ((i = 1; i <= "${numberOfLines}"; i = i + 1))
            do
                local line=''
                line="$(sed "${i}q;d" <<< "${data}")"

                local numberOfColumns='0'
                numberOfColumns="$(awk -F "${delimiter}" '{print NF}' <<< "${line}")"

                if [[ "${i}" -eq '1' ]]
                then
                    table="${table}$(printf '%s#+' "$(repeatString '#+' "${numberOfColumns}")")"
                fi

                table="${table}\n"

                local j=1

                for ((j = 1; j <= "${numberOfColumns}"; j = j + 1))
                do
                    table="${table}$(printf '#| %s' "$(cut -d "${delimiter}" -f "${j}" <<< "${line}")")"
                done

                table="${table}#|\n"

                if [[ "${i}" -eq '1' ]] || [[ "${numberOfLines}" -gt '1' && "${i}" -eq "${numberOfLines}" ]]
                then
                    table="${table}$(printf '%s#+' "$(repeatString '#+' "${numberOfColumns}")")"
                fi
            done

            if [[ "$(isEmptyString "${table}")" = 'false' ]]
            then
                echo -e "${table}" | column -s '#' -t | awk '/^\+/{gsub(" ", "-", $0)}1'
            fi
        fi
    fi
}

function removeEmptyLines(){

    local -r content="${1}"
    echo -e "${content}" | sed '/^\s*$/d'
}

function repeatString(){

    local -r string="${1}"
    local -r numberToRepeat="${2}"

    if [[ "${string}" != '' && "${numberToRepeat}" =~ ^[1-9][0-9]*$ ]]
    then
        local -r result="$(printf "%${numberToRepeat}s")"
        echo -e "${result// /${string}}"
    fi
}

function isEmptyString(){

    local -r string="${1}"

    if [[ "$(trimString "${string}")" = '' ]]
    then
        echo 'true' && return 0
    fi

    echo 'false' && return 1
}

function trimString(){

    local -r string="${1}"
    sed 's,^[[:blank:]]*,,' <<< "${string}" | sed 's,[[:blank:]]*$,,'
}

function helpPanel(){
	echo -e "\n\t${redColour}[!] Uso: ./analisisLogs${endColour}"
	for i in $(seq 1 80); do echo -ne "${redColour}-"; done; echo -ne "${endColour}"
	echo -e "\n\n\t${grayColour}[-r]${endColour}${yellowColour} Leer un archivo ${endColour}${blueColour} (Ejemplo: -r access.log)${endColour}"
	echo -e "\n\n\t${grayColour}[-e]${endColour}${yellowColour} Modo exploración${endColour}"
	echo -e "\t\t${purpleColour}logs${endColour}${yellowColour}:\t\t\t Listar los Logs${endColour}"
	echo -e "\t\t${purpleColour}logs_get${endColour}${yellowColour}:\t\t Listar los logs cuyas peticiones sean: GET${endColour}"
	echo -e "\t\t${purpleColour}logs_post${endColour}${yellowColour}:\t\t Listar los logs cuyas peticiones sean: POST${endColour}"
	echo -e "\n\t${grayColour}[-n]${endColour}${yellowColour} Limitar el número de resultados${endColour}${blueColour} (Ejemplo: -n 10)${endColour}"
	echo -e "\n\t${grayColour}[-i]${endColour}${yellowColour} Proporcionar una direccion ip${endColour}${blueColour} (Ejemplo: -i 192.168.1.23)${endColour}"
	echo -e "\n\t${grayColour}[-f]${endColour}${yellowColour} Proporcionar una fecha${endColour}${blueColour} (Ejemplo: -f 10/Dec/2020)${endColour}"
	echo -e "\n\t${grayColour}[-d]${endColour}${yellowColour} Mostrar un reporte general${endColour}${blueColour} (Ejemplo: -d report)${endColour}"
	echo -e "\n\t${grayColour}[-h]${endColour}${yellowColour} Mostrar este panel de ayuda${endColour}\n"
	tput cnorm; exit 1
}

function logs(){
	if [[ -n $inspeccionar_ip && -n $inspeccionar_fecha ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | awk 'ORS="\n\n"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Fecha|Cant_Peticiones|Cant_Peticiones_GET|Cant_Peticiones_POST${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$inspeccionar_fecha|$cant_pet|$cant_get|$cant_post${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	elif [[ -n $inspeccionar_ip && ! -n $inspeccionar_fecha ]]; then
		if [[ $reporte == "report" ]]; then
			cat $nombre_archivo | awk -v ip="$inspeccionar_ip" '$1 == ip' > logs_report.txt
			logs_report_general
			echo -e "${blueColour}IP|Cant_Peticiones|Cant_Peticiones_GET|Cant_Peticiones_POST|Fecha_Mas_Activa${endColour}" > logs.txt
			echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$cant_get|$cant_post|$fecha_trafico${endColour}" >> logs.txt
			logs_report
		else
			echo -e "${yellowColour}$(cat $nombre_archivo | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	elif [[ -n $inspeccionar_fecha && ! -n $inspeccionar_ip ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' > logs_report.txt
			logs_report_general
			echo -e "${blueColour}Fecha|Cant_Peticiones|Cant_Peticiones_GET|Cant_Peticiones_POST|IP_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_fecha|$cant_pet|$cant_get|$cant_post|$ip_activa${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	else
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo  > logs_report.txt
			logs_report_general
                        echo -e "${blueColour}Cant_Peticiones|Cant_Peticiones_GET|Cant_Peticiones_POST|IP_Mas_Activa|Fecha_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$cant_pet|$cant_get|$cant_post|$ip_activa|$fecha_trafico${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	fi
}

function logs_get(){
	if [[ -n $inspeccionar_ip && -n $inspeccionar_fecha ]]; then
                if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' |  awk 'ORS="\n\n"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Fecha|Cant_Peticiones${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$inspeccionar_fecha|$cant_pet${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColor}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColor}"
        	fi
	elif [[ -n $inspeccionar_ip && ! -n $inspeccionar_fecha ]]; then
                if [[ $reporte == "report" ]]; then
			cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | awk -v ip="$inspeccionar_ip" '$1 == ip' > logs_report.txt
			logs_report_general
			echo -e "${blueColour}IP|Cant_Peticiones|Fecha_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico${endColour}" >> logs.txt
			logs_report
		else
			echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
        	fi
	elif [[ -n $inspeccionar_fecha && ! -n $inspeccionar_ip ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Cant_Peticiones|IP_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_fecha|$cant_pet|$ip_activa${endColour}" >> logs.txt
                        logs_report
                else
                	echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
        	fi
	else
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}Cant_Peticiones|Fecha_Mas_Activa|IP_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico|$ip_activa${endColour}" >> logs.txt
                        logs_report
		else
			echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "GET"' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	fi

}

function logs_post(){
	if [[ -n $inspeccionar_ip && -n $inspeccionar_fecha ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | awk 'ORS="\n\n"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Fecha|Cant_Peticiones${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$inspeccionar_fecha|$cant_pet${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | awk -v fecha="$inspeccionar_fecha" -F '- -|[][]|:' '$3 == fecha' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	elif [[ -n $inspeccionar_ip && ! -n $inspeccionar_fecha ]]; then
                if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | awk -v ip="$inspeccionar_ip" '$1 == ip' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Cant_Peticiones|Fecha_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | awk -v ip="$inspeccionar_ip" '$1 == ip' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
        	fi
	elif [[ -n $inspeccionar_fecha && ! -n $inspeccionar_ip ]]; then
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}IP|Cant_Peticiones|Fecha_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico${endColour}" >> logs.txt
                        logs_report
                else
                	echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | awk -v fecha="$inspeccionar_fecha" -F '[][]|:' '$2 == fecha' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
        	fi
	else
		if [[ $reporte == "report" ]]; then
                        cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' > logs_report.txt
                        logs_report_general
                        echo -e "${blueColour}Cant_Peticiones|Fecha_Mas_Activa|IP_Mas_Activa${endColour}" > logs.txt
                        echo -e "${yellowColour}$inspeccionar_ip|$cant_pet|$fecha_trafico|$ip_activa${endColour}" >> logs.txt
                        logs_report
                else
			echo -e "${yellowColour}$(cat $nombre_archivo | tr -d '"' | awk '$6 == "POST"' | head -n $limitar | awk 'ORS="\n\n"')${endColour}"
		fi
	fi

}

function logs_report_general(){
        cant_pet=$(cat logs_report.txt | tr -d '"' | awk '$6 == "GET" || $6 == "POST"' | wc -l)
        cant_get=$(cat logs_report.txt | tr -d '"' | awk '$6 == "GET"' |  wc -l)
        cant_post=$(cat logs_report.txt | tr -d '"' | awk '$6 == "POST"' |  wc -l)
        fecha_trafico=$(cat logs_report.txt | awk '{print $4}' | tr -d '[' | awk -F ':' '{print $1}' | uniq -c | sort -nr | head -n 1 | awk '{print $2}')
        ip_activa=$(cat logs_report.txt | awk '{print $1}' | uniq -c | sort -nr | head -n 1 | awk '{print $2}')
}

function logs_report(){
	printTable '|' "$(cat logs.txt)"
        rm logs_report.txt logs.txt
}

parameter_counter=0
limitar=30
while getopts "d:r:e:n:i:f:h:" arg; do
	case $arg in
		r) nombre_archivo=$OPTARG;;
		e) modo_exploracion=$OPTARG; let parameter_counter+=1;;
		n) limitar=$OPTARG; let parameter_counter+=1;;
		i) inspeccionar_ip=$OPTARG; let parameter_counter+=1;;
		f) inspeccionar_fecha=$OPTARG; let parameter_counter+=1;;
		d) reporte=$OPTARG; let parameter_counter+=1;;
		h) helpPanel;;
	esac
done

if [ $parameter_counter == 0 ]; then
	helpPanel
else
	if [ "$(echo $modo_exploracion)" == "logs" ]; then
		logs
	elif [ "$(echo $modo_exploracion)" == "logs_get" ]; then
		logs_get
	elif [ "$(echo $modo_exploracion)" == "logs_post" ]; then
		logs_post
	fi
fi
